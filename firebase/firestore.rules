rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is a property owner
    function isPropertyOwner(propertyId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/properties/$(propertyId)) &&
        get(/databases/$(database)/documents/properties/$(propertyId)).data.ownerId == request.auth.uid;
    }
    
    // Helper function to check if the user is a tenant of the property
    function isPropertyTenant(propertyId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/properties/$(propertyId)) &&
        get(/databases/$(database)/documents/properties/$(propertyId)).data.tenants.hasAny([request.auth.uid]);
    }
    
    // User profiles
    match /users/{userId} {
      // Users can read and update their own profile
      allow read, update: if request.auth.uid == userId;
      // Only admins can create or delete user profiles
      allow create, delete: if isAdmin();
      // Everyone can read user profiles for basic info
      allow read: if isSignedIn();
    }
    
    // Properties
    match /properties/{propertyId} {
      // Property owners can read, write and delete their properties
      allow read, write, delete: if isPropertyOwner(propertyId);
      // Tenants can read properties they are associated with
      allow read: if isPropertyTenant(propertyId);
      // Admins have full access
      allow read, write, delete: if isAdmin();
    }
    
    // Lease contracts
    match /leaseContracts/{contractId} {
      // Property owners can manage contracts for their properties
      allow read, write, delete: if 
        isSignedIn() && 
        exists(/databases/$(database)/documents/leaseContracts/$(contractId)) &&
        isPropertyOwner(get(/databases/$(database)/documents/leaseContracts/$(contractId)).data.propertyId);
      
      // Tenants can read their contracts
      allow read: if 
        isSignedIn() && 
        exists(/databases/$(database)/documents/leaseContracts/$(contractId)) &&
        isPropertyTenant(get(/databases/$(database)/documents/leaseContracts/$(contractId)).data.propertyId);
      
      // Admins have full access
      allow read, write, delete: if isAdmin();
    }
    
    // Payments
    match /payments/{paymentId} {
      // Users can create their own payments
      allow create: if isSignedIn();
      
      // Users can read their own payments
      allow read: if 
        isSignedIn() && 
        exists(/databases/$(database)/documents/payments/$(paymentId)) &&
        (request.auth.uid == get(/databases/$(database)/documents/payments/$(paymentId)).data.userId ||
         isPropertyOwner(get(/databases/$(database)/documents/payments/$(paymentId)).data.propertyId));
      
      // Admins have full access
      allow read, write, delete: if isAdmin();
    }
    
    // Documents
    match /documents/{documentId} {
      // Document owners can manage their documents
      allow read, write, delete: if 
        isSignedIn() && 
        exists(/databases/$(database)/documents/documents/$(documentId)) &&
        request.auth.uid == get(/databases/$(database)/documents/documents/$(documentId)).data.ownerId;
      
      // Property owners can read documents related to their properties
      allow read: if 
        isSignedIn() && 
        exists(/databases/$(database)/documents/documents/$(documentId)) &&
        isPropertyOwner(get(/databases/$(database)/documents/documents/$(documentId)).data.propertyId);
      
      // Admins have full access
      allow read, write, delete: if isAdmin();
    }
  }
} 